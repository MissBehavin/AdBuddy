version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=https://api.adtest.com
    restart: always

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    ports:
      - "3001:3001"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/adtest
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - REDIS_URL=redis://redis:6379
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - JWT_SECRET=${JWT_SECRET}
      - NODE_ENV=production
    restart: always
    depends_on:
      - mongodb
      - rabbitmq
      - redis

  copy-service:
    build:
      context: ./services/copy-service
      dockerfile: Dockerfile.prod
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - COHERE_API_KEY=${COHERE_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - NODE_ENV=production
    restart: always
    depends_on:
      - rabbitmq

  graphics-service:
    build:
      context: ./services/graphics-service
      dockerfile: Dockerfile.prod
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - STABLE_DIFFUSION_API_KEY=${STABLE_DIFFUSION_API_KEY}
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - NODE_ENV=production
    restart: always
    depends_on:
      - rabbitmq

  video-service:
    build:
      context: ./services/video-service
      dockerfile: Dockerfile.prod
    environment:
      - PICTORY_API_KEY=${PICTORY_API_KEY}
      - SYNTHESIA_API_KEY=${SYNTHESIA_API_KEY}
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - NODE_ENV=production
    restart: always
    depends_on:
      - rabbitmq

  audio-service:
    build:
      context: ./services/audio-service
      dockerfile: Dockerfile.prod
    environment:
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - NODE_ENV=production
    restart: always
    depends_on:
      - rabbitmq

  storage-service:
    build:
      context: ./services/storage-service
      dockerfile: Dockerfile.prod
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - NODE_ENV=production
    restart: always
    depends_on:
      - rabbitmq

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    restart: always

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: always

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always

volumes:
  mongodb_data:
  rabbitmq_data:
  redis_data: 